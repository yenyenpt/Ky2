CREATE DATABASE ASSIGNMENT2_PHAMTHIYEN

IF OBJECT_ID('LOAISACH') IS NOT NULL
DROP TABLE LOAISACH
CREATE TABLE LOAISACH(
    MALOAI VARCHAR(50) PRIMARY KEY,
    TENLOAI NVARCHAR(50),
);
INSERT INTO LOAISACH(MALOAI,TENLOAI) VALUES
('VAN HOC',N'ĐỒ HOẠ'),
('TIEU THUYET',N'LẬP TRÌNH'),
('THIEU NHI',N'TIẾNG ANH'),
('DAN GIAN',N'DU LỊCH');
SELECT * FROM LOAISACH
DELETE FROM LOAISACH


IF OBJECT_ID('PHIEUMUON') IS NOT NULL
DROP TABLE PHIEUMUON
CREATE TABLE PHIEUMUON(
    MAPHIEUMUON VARCHAR(50) PRIMARY KEY,
    NGAYMUON DATE,
    NGAYTRA DATE,
    MASINHVIEN VARCHAR(50),
    TRANGTHAI NVARCHAR(50),

 FOREIGN KEY(MASINHVIEN) REFERENCES SINHVIEN(MASINHVIEN),

   
);
INSERT INTO PHIEUMUON(MAPHIEUMUON,NGAYMUON,NGAYTRA,MASINHVIEN,TRANGTHAI) VALUES
('PM01','2022/09/10','2022/09/20','PH2903',N'ĐÃ TRẢ'),
('PM02','2022/10/10','2022/10/23','PH2904',N'CHƯA TRẢ'),
('PM03','2022/02/01','2022/02/10','PH2908',N'ĐÃ TRẢ'),
('PM04','2022/09/20','2022/09/28','PH2909',N'CHƯA TRẢ');
SELECT * FROM PHIEUMUON



IF OBJECT_ID('SINHVIEN') IS NOT NULL
DROP TABLE SINHVIEN
CREATE TABLE SINHVIEN(
    MASINHVIEN VARCHAR(50) PRIMARY KEY ,
    TENSINHVIEN NVARCHAR(50),
    NGAYHETHAN DATE,
    CHUYENNGHANH NVARCHAR(50),
    EMAIL NVARCHAR(50),
    SODIENTHOAI NVARCHAR(50),
   
   
);
INSERT INTO SINHVIEN(MASINHVIEN,TENSINHVIEN,NGAYHETHAN,CHUYENNGHANH,EMAIL,SODIENTHOAI) VALUES
('PH2903',N'PHẠM THỊ NHI','2003/12/08',N'LẬP TRÌNH',N'YEN08@FPT.EDU.VN','0976198642'),
('PH2904',N'PHẠM THỊ NHI YẾN','2000/12/02',N'THIẾT KẾ',N'YEN03@FPT.EDU.VN','0876193642'),
('PH2908',N'NGUYỄN  THỊ HIẾU','2010/10/20',N'BÁN HÀNG',N'THANH08@FPT.EDU.VN','0982098642'),
('PH2909',N'PHẠM THỊ NHI','2003/12/08',N'LẬP TRÌNH',N'YEN08@FPT.EDU.VN','0902198642');
SELECT * FROM SINHVIEN
DELETE FROM SINHVIEN



IF OBJECT_ID('TACGIA') IS NOT NULL
DROP TABLE TACGIA
CREATE TABLE TACGIA(
    MATACGIA VARCHAR(50) PRIMARY KEY,
    TENTACGIA NVARCHAR(50),
    MALOAI VARCHAR(50),
);

INSERT INTO TACGIA(MATACGIA,TENTACGIA,MALOAI) VALUES
('LT',N'LUẬN TÍNH','VAN HOC'),
('TD',N'THUỲ DƯƠNG','TIEU THUYET'),
('KG',N'KIÊN GIANG','THIEU NHI'),
('XH',N'XUÂN HỒNG','DAN GIAN');
SELECT * FROM TACGIA
DELETE FROM TACGIA




IF OBJECT_ID('CHITIET_PHIEUDON') IS NOT NULL
DROP TABLE CHITIET_PHIEUDON
CREATE TABLE CHITIET_PHIEUDON(
    ID INT,
    MAPHIEUMUON VARCHAR(50),
    MASACH VARCHAR(50),
    GHICHU NVARCHAR(50),

FOREIGN KEY(MASACH) REFERENCES SACH(MASACH),
FOREIGN KEY(MAPHIEUMUON) REFERENCES PHIEUMUON(MAPHIEUMUON),
);
INSERT INTO CHITIET_PHIEUDON(ID,MAPHIEUMUON,MASACH,GHICHU) VALUES
('102','PM01','MS22',N'TỐT'),
('103','PM02','MS23',N'HOÀN THÀNH'),
('104','PM03','MS24',N'KHÔNG HOÀN THÀNH'),
('105','PM04','MS25',N'HOÀN THÀNH');
SELECT * FROM CHITIET_PHIEUDON
DELETE FROM CHITIET_PHIEUDON

IF OBJECT_ID('SACH') IS NOT NULL
DROP TABLE SACH
CREATE TABLE SACH(
    MASACH VARCHAR(50) PRIMARY KEY,
    TENSACH NVARCHAR(50),
    NHASANXUAT NVARCHAR(50),
    MATACGIA VARCHAR(50),
    SOLUONGBANSAO INT,
    GIATIEN FLOAT,
    NGAYNHAPKHO DATE,
    VITRI NVARCHAR(50),
    MALOAI VARCHAR(50),
    SOTRANG INT,

    FOREIGN KEY(MALOAI) REFERENCES LOAISACH(MALOAI),
    FOREIGN KEY(MATACGIA) REFERENCES TACGIA(MATACGIA),
   

);
INSERT INTO SACH(MASACH,TENSACH,NHASANXUAT,MATACGIA,SOLUONGBANSAO,GIATIEN,NGAYNHAPKHO,VITRI,MALOAI,SOTRANG) VALUES
('MS22',N'CHÚ CỪU',N'VIỆT NAM','LT','1',12000000,'2022/08/12',N'BẮC GIANG','VAN HOC',2),
('MS23',N'CON VỊT',N'QUỐC VIỆT','TD','2',15000000,'2023/10/12',N'HÀ NỘI','TIEU THUYET',10),
('MS24',N'CÂY TRE',N'TRUNG QUỐC','KG','8',19000000,'2010/12/22',N'THÁI NGUYÊN','THIEU NHI',30),
('MS25',N'THIẾU NỮ',N'CỦ CHI','XH','20',100000,'2019/09/10',N'HIỆP HOÀ','DAN GIAN',92);
SELECT * FROM SACH
DELETE FROM SACH

-- 6.1 Liệt kê tất cả thông tin của các đầu sách gồm tên sách, mã sách, giá tiền , tác giả
-- thuộc loại sách có mã “VAN HOC”.
SELECT TENSACH, MASACH, GIATIEN, MATACGIA FROM SACH WHERE MALOAI = 'VAN HOC';
SELECT * FROM SACH

-- 6.2 Viết câu lệnh cập nhật lại trạng thái đã trả sách cho phiếu mượn của sinh viên có mã
-- sinh viên PD12301 (ví dụ).
UPDATE PHIEUMUON 
SET TRANGTHAI = N'CHƯA TRẢ'
WHERE MAPHIEUMUON = 'PM04';
SELECT*FROM PHIEUMUON;


-- 6.3 Liệt kê các phiếu mượn chưa trả sách cho thư viên theo thứ tự tăng dần của ngày
-- mượn sách.
SELECT * FROM PHIEUMUON
WHERE TRANGTHAI = N'ĐÃ TRẢ'
ORDER BY NgayMuon ASC;



-- 6.4 Liệt kê tổng số đầu sách của mỗi loại sách ( gồm mã loại sách, tên loại sách, tổng số
-- lượng sách mỗi loại).
SELECT SACH.MALOAI, LOAISACH.TENLOAI, COUNT(LOAISACH.MALOAI) AS 'SO LUONG'
FROM SACH 
INNER JOIN LOAISACH ON SACH.MALOAI = LOAISACH.MALOAI
GROUP BY SACH.MALOAI, LOAISACH.TENLOAI;

-- 6.5 Đếm xem có bao nhiêu lượt sinh viên đã mượn sách.
SELECT MASINHVIEN, COUNT( MASINHVIEN) AS 'SO LUONG MUON'
FROM PHIEUMUON
GROUP BY MASINHVIEN;



-- 6.6 Hiển thị tất cả các quyển sách có tiêu đề chứa từ khoá “SQL”.
SELECT * FROM SACH WHERE TENSACH LIKE N'%CHÚ CỪU%';

-- 6.7 Viết câu lệnh cập nhật lại giá tiền của các quyển sách có ngày nhập kho trước năm
-- 2014 giảm 30%.
UPDATE SACH
SET GIATIEN = GIATIEN - GIATIEN*0.3
WHERE YEAR(NGAYNHAPKHO) <= 2022
SELECT*FROM SACH;


-- 6.8 Viết câu lệnh cập nhật lại trạng thái đã trả sách cho phiếu mượn của sinh viên có mã
-- sinh viên PD12301 (ví dụ).
UPDATE PHIEUMUON 
SET TRANGTHAI = N'ĐÃ TRẢ'
WHERE MASINHVIEN = 'PH2903';
SELECT*FROM PHIEUMUON;

-- 6.9 Viết câu lệnh cập nhật lại số lượng bản sao tăng lên 5 đơn vị đối với các đầu sách có
-- lượt mượn lớn hơn 10
UPDATE SACH
SET SOLUONGBANSAO = SOLUONGBANSAO + 5
WHERE MaSach 
IN (SELECT Sach.MaSach FROM Sach
INNER JOIN CHITIET_PHIEUDON ON CHITIET_PHIEUDON.MASACH = Sach.MaSach
GROUP BY Sach.MaSach 
HAVING COUNT(CHITIET_PHIEUDON.MaSach) > 10);
SELECT * FROM SACH

-- 6.10 Viết câu lệnh xoá các phiếu mượn có ngày mượn và ngày trả trước „1/1/2010‟
DELETE FROM CHITIET_PHIEUDON
WHERE MaPhieuMuon IN (SELECT MaPhieuMuon FROM PhieuMuon WHERE NgayMuon < '2022/02/01');

SELECT * FROM CHITIET_PHIEUDON;

DELETE FROM PhieuMuon
WHERE MaPhieuMuon IN(SELECT MaPhieuMuon FROM PhieuMuon WHERE NgayMuon < '2022/02/01');
SELECT * FROM PhieuMuon;


